name: Release

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Sync
        run: uv sync

      - name: Build Executable for non-Windows
        if: matrix.os != 'windows-latest'
        run: |
          . .venv/bin/activate
          pyinstaller --name="app" --windowed --onefile main.py

      - name: Build Executable for Windows
        if: matrix.os == 'windows-latest'
        run: |
          .venv/scripts/activate.ps1
          pyinstaller --name="app" --windowed --onefile main.py

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}

      - name: Upload Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: |
            dist/app*
          asset_name: app-${{ matrix.os }}
          asset_content_type: application/octet-stream